<ejs-pivotview id="pivotview" width="100%" height="450" showFieldList="true" showGroupingBar="true" toolbar="@ViewBag.toolbar"
    allowExcelExport="true" allowConditionalFormatting="true" allowNumberFormatting="true" allowPdfExport="true"
    allowGrouping="true" showToolbar="true" allowCalculatedField="true" showFieldList="true" allowDeferLayoutUpdate="true"
    saveReport="saveReport" loadReport="loadReport" fetchReport="fetchReport" renameReport="renameReport" removeReport="removeReport" newReport="newReport"
    toolbarRender="beforeToolbarRender">
    <e-datasourceSettings dataSource="@ViewBag.data" expandAll="true" enableSorting="true" allowLabelFilter="true" allowValueFilter="true">
        <e-sortsettings>
            <e-field name="company" order="Descending"></e-field>
        </e-sortsettings>
        <e-formatsettings>
            <e-field name="balance" format="C"></e-field>
            <e-field name="date" format="dd/MM/yyyy-hh:mm" type="date"></e-field>
        </e-formatsettings>
        <e-drilledmembers>
            <e-field name="product" items="@ViewBag.drilledMembersProduct"></e-field>
            <e-field name="gender" items="@ViewBag.drilledMembersGender"></e-field>
        </e-drilledmembers>
        <e-filtersettings>
            <e-field name="date" type="Date" condition="Between" value1="new Date('02/16/2000')" value2="new Date('02/16/2002')"></e-field>
            <e-field name="age" type="Number" condition="Between" value1="25" value2="35"></e-field>
            <e-field name="eyeColor" type="Exclude" items="@ViewBag.filterSettingsEyeColor"></e-field>
        </e-filtersettings>
        <e-rows>
            <e-field name="state"></e-field>
            <e-field name="eyeColor"></e-field>
        </e-rows>
        <e-columns>
            <e-field name="gender" caption="Population"></e-field>
            <e-field name="isActive"></e-field>
        </e-columns>
        <e-values>
            <e-field name="balance" caption="Balance"></e-field>
            <e-field name="quantity" caption="Quantity"></e-field>
        </e-values>
        <e-conditionalformatsettings>
            <e-format measure="balance" conditions="LessThan" value1="100000">
                <e-fieldlist-style backgroundColor="#80cbc4" color="black" fontFamily="Tahoma" fontSize="12px" />
            </e-format>
            <e-format measure="quantity" conditions="Between" value1="10" value2="20">
                <e-fieldlist-style backgroundColor="#f48fb1" color="black" fontFamily="Tahoma" fontSize="12px" />
            </e-format>
        </e-conditionalformatsettings>
    </e-datasourceSettings>
    <e-groupingBarSettings showFieldsPanel="true"></e-groupingBarSettings>
    <e-chartSettings value="Amount" enableExport="true" enableMultipleAxis="true">
        <e-chartSeries type="Column">
            <e-animation enable="false"></e-animation>
        </e-chartSeries>
    </e-chartSettings>
    <e-displayOption view="Both"></e-displayOption>
    <e-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Normal"></e-editSettings>
    <e-gridSettings columnWidth="140" contextMenuItems="@ViewBag.contextMenuItems"></e-gridSettings>
</ejs-pivotview>

<script>
    function saveReport(args) {
        var reports = [];
        var isSaved = false;
        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
            reports = JSON.parse(localStorage.pivotviewReports);
        }
        if (args.report && args.reportName && args.reportName !== '') {
            reports.map(function (item) {
                if (args.reportName === item.reportName) {
                    item.report = args.report;
                    isSaved = true;
                }
            });
            if (!isSaved) {
                reports.push(args);
            }
            localStorage.pivotviewReports = JSON.stringify(reports);
        }
    }
    function fetchReport(args) {
        var reportCollection = [];
        var reeportList = [];
        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
            reportCollection = JSON.parse(localStorage.pivotviewReports);
        }
        reportCollection.map(function (item) {
            reeportList.push(item.reportName);
        });
        args.reportName = reeportList;
    }
    function loadReport(args) {
        var pivotObj = document.getElementById('pivotview').ej2_instances[0];
        var reportCollection = [];
        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
            reportCollection = JSON.parse(localStorage.pivotviewReports);
        }
        reportCollection.map(function (item) {
            if (args.reportName === item.reportName) {
                args.report = item.report;
            }
        });
        if (args.report) {
            pivotObj.dataSourceSettings = JSON.parse(args.report).dataSourceSettings;
        }
    }
    function removeReport(args) {
        var reportCollection = [];
        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
            reportCollection = JSON.parse(localStorage.pivotviewReports);
        }
        for (var i = 0; i < reportCollection.length; i++) {
            if (reportCollection[i].reportName === args.reportName) {
                reportCollection.splice(i, 1);
            }
        }
        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
            localStorage.pivotviewReports = JSON.stringify(reportCollection);
        }
    }
    function renameReport(args) {
        var reportCollection = [];
        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
            reportCollection = JSON.parse(localStorage.pivotviewReports);
        }
        reportCollection.map(function (item) {
            if (args.reportName === item.reportName) {
                item.reportName = args.rename;
            }
        });
        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== "") {
            localStorage.pivotviewReports = JSON.stringify(reportCollection);
        }
    }
    function newReport() {
        var pivotObj = document.getElementById('pivotview').ej2_instances[0];
        pivotObj.setProperties({
            dataSourceSettings: {
                columns: [],
                rows: [],
                values: [],
                filters: []
            }
        }, false);
    }
    function beforeToolbarRender(args) {
        args.customToolbar.splice(12, 0, {
            prefixIcon: 'e-tool-expand e-icons', tooltipText: 'Expand/Collapse',
            click: function (args) {
                var pivotTableObj = document.getElementById('pivotview').ej2_instances[0];
                pivotTableObj.dataSourceSettings.expandAll = !pivotTableObj.dataSourceSettings.expandAll;
            },
        });
    }
</script>